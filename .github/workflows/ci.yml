name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        
    - name: Enable Corepack and setup Yarn
      run: |
        corepack enable
        corepack prepare yarn@4.0.0 --activate
        yarn --version
      
    - name: Install dependencies
      run: yarn install --immutable
      
    - name: Debug workspace structure
      run: |
        echo "=== Workspace info ==="
        yarn workspaces list
        echo "=== Prompts service package.json ==="
        cat packages/trip-bundle-prompts-service/package.json
        echo "=== PWA package.json ==="
        cat packages/trip-bundle-pwa/package.json
      
    - name: Type check
      run: yarn workspaces foreach --all run type-check || true
      
    - name: Build all packages
      run: |
        echo "=== Building all packages with topological ordering ==="
        yarn build
        echo "=== Verifying prompts service build ==="
        ls -la packages/trip-bundle-prompts-service/dist/
        echo "=== Verifying PWA build ==="
        ls -la packages/trip-bundle-pwa/dist/

  build-pwa:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        
    - name: Enable Corepack and setup Yarn
      run: |
        corepack enable
        corepack prepare yarn@4.0.0 --activate
        yarn --version
      
    - name: Install dependencies
      run: yarn install --immutable
      
    - name: Build all packages
      run: yarn build
      
    - name: Create deployment directory
      run: |
        cd packages/trip-bundle-pwa
        rm -rf deploy-temp
        mkdir -p deploy-temp
      
    - name: Build Mock Version
      run: |
        cd packages/trip-bundle-pwa
        echo "ðŸ”¨ Building mock version..."
        VITE_MOCK=true GITHUB_PAGES=true yarn build
        mkdir -p deploy-temp/mock
        cp -r dist/* deploy-temp/mock/
      
    - name: Build Real AI Version
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        cd packages/trip-bundle-pwa
        echo "ðŸ”¨ Building real AI version..."
        VITE_MOCK=false GITHUB_PAGES=true yarn build
        mkdir -p deploy-temp/real
        cp -r dist/* deploy-temp/real/
      
    - name: Create Landing Page
      run: |
        cd packages/trip-bundle-pwa
        cat > deploy-temp/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Trip Bundle - Choose Version</title>
            <style>
                body {
                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                    max-width: 800px;
                    margin: 50px auto;
                    padding: 20px;
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    color: white;
                    text-align: center;
                }
                .container {
                    background: rgba(255, 255, 255, 0.1);
                    backdrop-filter: blur(10px);
                    border-radius: 20px;
                    padding: 40px;
                    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
                }
                h1 { margin-bottom: 30px; font-size: 2.5em; }
                .version-card {
                    background: rgba(255, 255, 255, 0.2);
                    border-radius: 15px;
                    padding: 30px;
                    margin: 20px 0;
                    transition: transform 0.3s ease;
                }
                .version-card:hover { transform: translateY(-5px); }
                .btn {
                    display: inline-block;
                    padding: 15px 30px;
                    background: #4CAF50;
                    color: white;
                    text-decoration: none;
                    border-radius: 25px;
                    font-weight: bold;
                    margin: 10px;
                    transition: background 0.3s ease;
                }
                .btn:hover { background: #45a049; }
                .btn.real { background: #ff6b6b; }
                .btn.real:hover { background: #ff5252; }
                .cost { font-size: 0.9em; opacity: 0.8; margin-top: 10px; }
            </style>
        </head>
        <body>
            <div class="container">
                <h1>ðŸŽ’ Trip Bundle</h1>
                <p>Choose your experience:</p>
                
                <div class="version-card">
                    <h2>ðŸŽ­ Demo Version (Free)</h2>
                    <p>Pre-built trip bundles with sample data</p>
                    <p>Perfect for testing and demonstrations</p>
                    <a href="./mock/" class="btn">Try Demo Version</a>
                    <div class="cost">âœ… Completely Free</div>
                </div>
                
                <div class="version-card">
                    <h2>ðŸ¤– Real AI Version</h2>
                    <p>Powered by OpenAI GPT-5-mini</p>
                    <p>Generates personalized trip bundles</p>
                    <a href="./real/" class="btn real">Use Real AI</a>
                    <div class="cost">ðŸ’° ~$0.002 per trip generation</div>
                </div>
            </div>
        </body>
        </html>
        EOF
      
    - name: Create builds directory for artifacts
      run: |
        cd packages/trip-bundle-pwa
        mkdir -p builds/mock builds/prod
        cp -r deploy-temp/mock/* builds/mock/
        cp -r deploy-temp/real/* builds/prod/
      
    - name: Verify deployment structure
      run: |
        cd packages/trip-bundle-pwa
        echo "=== Deployment structure ==="
        ls -la deploy-temp/
        echo "=== Mock version ==="
        ls -la deploy-temp/mock/
        echo "=== Real AI version ==="
        ls -la deploy-temp/real/
        echo "=== Landing page ==="
        head -5 deploy-temp/index.html
        echo "=== Builds directory ==="
        ls -la builds/
      
    - name: Setup Pages
      uses: actions/configure-pages@v4
      if: github.ref == 'refs/heads/main'
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: pwa-builds
        path: packages/trip-bundle-pwa/builds/
        
    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      if: github.ref == 'refs/heads/main'
      with:
        path: './packages/trip-bundle-pwa/deploy-temp'

  deploy:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-pwa
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
